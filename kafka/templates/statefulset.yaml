apiVersion: apps/v1
kind: StatefulSet
metadata:
    name: kafka-{{ .Values.kafka.name }}
    labels:
        app: kafka-{{ .Values.kafka.name }}
spec:
    replicas: 3
    serviceName: kafka-{{ .Values.kafka.name }}
    selector:
        matchLabels:
            app: kafka-{{ .Values.kafka.name }}
    template:
        metadata:
            labels:
                app: kafka-{{ .Values.kafka.name }}
        spec:
            containers:
                - name: kafka-server
                  image: wurstmeister/kafka:2.11-1.1.0
                  ports:
                      - containerPort: 9093
                        name: server
                  env:
                      - name: HOSTNAME_COMMAND
                        value: "echo \"$HOSTNAME.kafka-{{ .Values.kafka.name }}.{{ .Release.Namespace }}.svc.cluster.local\""
                      - name: BROKER_ID_COMMAND
                        value: "hostname | awk -F'-' '{print $NF}'"
                      - name: KAFKA_ZOOKEEPER_CONNECT
                        value: "zk-{{ .Values.zookeeper.name }}-0.zk-{{ .Values.zookeeper.name }}.{{ .Release.Namespace }}.svc.cluster.local:2181,\
                                zk-{{ .Values.zookeeper.name }}-1.zk-{{ .Values.zookeeper.name }}.{{ .Release.Namespace }}.svc.cluster.local:2181,\
                                zk-{{ .Values.zookeeper.name }}-2.zk-{{ .Values.zookeeper.name }}.{{ .Release.Namespace }}.svc.cluster.local:2181"
                      - name: KAFKA_LISTENERS
                        value: "INSIDE://:9092,OUTSIDE://:9093"
                      - name: KAFKA_ADVERTISED_LISTENERS
                        value: "INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9093"
                      - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
                        value: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
                      - name: KAFKA_INTER_BROKER_LISTENER_NAME
                        value: "INSIDE"
                      - name: KAFKA_PORT
                        value: "9092"
                      - name: KAFKA_LOG_DIRS
                        value: "/kafka/logs"
                      - name: KAFKA_OPTS
                        value: "-Dlogging.level=INFO"
                      - name: KAFKA_NUM_PARTITIONS
                        value: "6"
                      - name: KAFKA_REQUEST_TIMEOUT_MS
                        value: "30000"
                  resources:
                      requests:
                          cpu: 10m
                          memory: 256Mi
                      limits:
                          cpu: 2000m
                          memory: 4Gi
                  volumeMounts:
                      - name: kafka-logs
                        mountPath: /kafka/logs
    volumeClaimTemplates:
        - metadata:
              name: kafka-logs
              annotations:
                  volume.beta.kubernetes.io/storage-class: {{ .Values.kafka.storageClass }}
          spec:
              accessModes:
                  - ReadWriteOnce
              resources:
                  requests:
                      storage: {{ .Values.kafka.storageCapacity }}